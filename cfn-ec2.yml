# Requires:
# - In region eu-west-2
# - An SSH key named MCInstanceAccess
# - An S3 bucket called guydunton-mc-resources containing the script mc-instance-start-script.sh
Description: EC2 instance for running a MC server. Requried a security group c
Resources:
  MCServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-00a1270ce1e007c27
      UserData:
        Fn::Base64: |
          #!/bin/bash -x
          aws s3 cp s3://guydunton-mc-resources/mc-instance-start-script.sh ./
          chmod +x mc-instance-start-script.sh
          ./mc-instance-start-script.sh
      IamInstanceProfile: !Ref EC2S3InstanceProfile
      SecurityGroups:
        - !Ref MCSecurityGroup
      KeyName: MCInstanceAccess
      Tags:
        - Key: Name
          Value: MC Server
  MCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow TCP & UDP connection for Minecraft
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 25565
          ToPort: 25565
        - IpProtocol: udp
          CidrIp: 0.0.0.0/0
          FromPort: 25565
          ToPort: 25565
        - IpProtocol: tcp
          FromPort: 22
          CidrIp: 0.0.0.0/0
          ToPort: 22
  EC2S3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      RoleName: EC2S3MCRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  EC2S3InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2S3Role

Outputs:
  InstanceIP:
    Description: The Instance Public IP
    Value: !GetAtt MCServerInstance.PublicIp
